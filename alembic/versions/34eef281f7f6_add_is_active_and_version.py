"""add is_active and version

Revision ID: 34eef281f7f6
Revises: 20250922_addcols01
Create Date: 2025-09-22 06:57:14.298234

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '34eef281f7f6'
down_revision: Union[str, Sequence[str], None] = '20250922_addcols01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('audit_logs', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_is_active'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_updated_at'), table_name='audit_logs')
    op.drop_column('audit_logs', 'is_active')
    op.drop_column('audit_logs', 'version')
    op.alter_column('database_stats', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('ix_database_stats_created_at'), table_name='database_stats')
    op.drop_index(op.f('ix_database_stats_id'), table_name='database_stats')
    op.drop_index(op.f('ix_database_stats_is_active'), table_name='database_stats')
    op.drop_index(op.f('ix_database_stats_updated_at'), table_name='database_stats')
    op.drop_column('database_stats', 'is_active')
    op.drop_column('database_stats', 'version')
    op.alter_column('email_sends', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('idx_email_recipient_status'), table_name='email_sends')
    op.drop_index(op.f('idx_email_sent_date'), table_name='email_sends', postgresql_where='(sent_at IS NOT NULL)')
    op.drop_index(op.f('ix_email_sends_created_at'), table_name='email_sends')
    op.drop_index(op.f('ix_email_sends_id'), table_name='email_sends')
    op.drop_index(op.f('ix_email_sends_is_active'), table_name='email_sends')
    op.drop_index(op.f('ix_email_sends_updated_at'), table_name='email_sends')
    op.drop_column('email_sends', 'is_active')
    op.drop_column('email_sends', 'version')
    op.alter_column('processing_logs', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('idx_processing_log_level_time'), table_name='processing_logs')
    op.drop_index(op.f('idx_processing_log_step'), table_name='processing_logs')
    op.drop_index(op.f('ix_processing_logs_created_at'), table_name='processing_logs')
    op.drop_index(op.f('ix_processing_logs_id'), table_name='processing_logs')
    op.drop_index(op.f('ix_processing_logs_is_active'), table_name='processing_logs')
    op.drop_index(op.f('ix_processing_logs_updated_at'), table_name='processing_logs')
    op.drop_column('processing_logs', 'is_active')
    op.drop_column('processing_logs', 'version')
    op.alter_column('requirement_comments', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('ix_requirement_comments_created_at'), table_name='requirement_comments')
    op.drop_index(op.f('ix_requirement_comments_id'), table_name='requirement_comments')
    op.drop_index(op.f('ix_requirement_comments_is_active'), table_name='requirement_comments')
    op.drop_index(op.f('ix_requirement_comments_updated_at'), table_name='requirement_comments')
    op.drop_column('requirement_comments', 'is_active')
    op.drop_column('requirement_comments', 'version')
    op.alter_column('requirement_consultants', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('ix_requirement_consultants_created_at'), table_name='requirement_consultants')
    op.drop_index(op.f('ix_requirement_consultants_id'), table_name='requirement_consultants')
    op.drop_index(op.f('ix_requirement_consultants_is_active'), table_name='requirement_consultants')
    op.drop_index(op.f('ix_requirement_consultants_updated_at'), table_name='requirement_consultants')
    op.drop_column('requirement_consultants', 'is_active')
    op.drop_column('requirement_consultants', 'version')
    op.alter_column('requirement_summary_view', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('requirement_summary_view', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('requirement_summary_view', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('requirements', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default='true',
               existing_nullable=False)
    op.alter_column('requirements', 'version',
               existing_type=sa.INTEGER(),
               server_default=sa.text('1'),
               existing_nullable=False)
    op.alter_column('requirements', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('idx_requirements_created_status'), table_name='requirements')
    op.drop_index(op.f('idx_requirements_search'), table_name='requirements', postgresql_using='gin')
    op.drop_index(op.f('idx_requirements_tech_stack'), table_name='requirements', postgresql_using='gin')
    op.drop_index(op.f('ix_requirements_created_at'), table_name='requirements')
    op.drop_index(op.f('ix_requirements_id'), table_name='requirements')
    op.drop_index(op.f('ix_requirements_updated_at'), table_name='requirements')
    op.create_index(op.f('ix_requirements_version'), 'requirements', ['version'], unique=False)
    op.add_column('resume_analytics_view', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('resume_analytics_view', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.alter_column('resume_analytics_view', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('resume_customizations', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('idx_customization_company_job'), table_name='resume_customizations')
    op.drop_index(op.f('idx_customization_tech_stack'), table_name='resume_customizations', postgresql_using='gin')
    op.drop_index(op.f('ix_resume_customizations_created_at'), table_name='resume_customizations')
    op.drop_index(op.f('ix_resume_customizations_id'), table_name='resume_customizations')
    op.drop_index(op.f('ix_resume_customizations_is_active'), table_name='resume_customizations')
    op.drop_index(op.f('ix_resume_customizations_updated_at'), table_name='resume_customizations')
    op.drop_column('resume_customizations', 'is_active')
    op.drop_column('resume_customizations', 'version')
    op.alter_column('resume_documents', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.drop_index(op.f('idx_resume_hash'), table_name='resume_documents')
    op.drop_index(op.f('idx_resume_status_created'), table_name='resume_documents')
    op.drop_index(op.f('idx_resume_user_created'), table_name='resume_documents')
    op.drop_index(op.f('ix_resume_documents_created_at'), table_name='resume_documents')
    op.drop_index(op.f('ix_resume_documents_id'), table_name='resume_documents')
    op.drop_index(op.f('ix_resume_documents_is_active'), table_name='resume_documents')
    op.drop_index(op.f('ix_resume_documents_updated_at'), table_name='resume_documents')
    op.drop_column('resume_documents', 'is_active')
    op.drop_column('resume_documents', 'version')
    op.alter_column('user_sessions', 'session_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user_sessions', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=255),
               nullable=False)
    op.alter_column('user_sessions', 'ip_address',
               existing_type=sa.VARCHAR(length=45),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('user_sessions', 'user_agent',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('user_sessions', 'last_activity',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_sessions', 'page_views',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_sessions', 'actions_performed',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_sessions', 'session_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_sessions', 'preferences',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
    op.alter_column('user_sessions', 'version',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('user_sessions', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('user_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               nullable=False)
    op.alter_column('user_sessions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               nullable=False)
    op.drop_index(op.f('idx_sessions_is_active'), table_name='user_sessions')
    op.drop_index(op.f('idx_sessions_last_activity'), table_name='user_sessions')
    op.drop_index(op.f('idx_sessions_user_id'), table_name='user_sessions')
    op.drop_constraint(op.f('uq_user_sessions_session_id'), 'user_sessions', type_='unique')
    op.drop_index(op.f('ix_user_sessions_session_id'), table_name='user_sessions')
    op.create_index(op.f('ix_user_sessions_session_id'), 'user_sessions', ['session_id'], unique=True)
    op.create_index('idx_session_activity', 'user_sessions', ['last_activity'], unique=False)
    op.create_index('idx_session_user_active', 'user_sessions', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_is_active'), 'user_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.drop_constraint(op.f('user_sessions_user_id_fkey'), 'user_sessions', type_='foreignkey')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'reset_token_expiry',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'profile_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               existing_nullable=True)
    op.alter_column('users', 'security_questions',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('users', 'mfa_secret',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               server_default=None,
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    op.create_index('idx_user_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_index('idx_user_active', table_name='users')
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'id',
               existing_type=sa.String(length=36),
               server_default=sa.text('uuid_generate_v4()'),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('users', 'mfa_secret',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
    op.alter_column('users', 'security_questions',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'profile_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               existing_nullable=True)
    op.alter_column('users', 'last_login',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=True)
    op.alter_column('users', 'reset_token_expiry',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
    op.create_foreign_key(op.f('user_sessions_user_id_fkey'), 'user_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_is_active'), table_name='user_sessions')
    op.drop_index('idx_session_user_active', table_name='user_sessions')
    op.drop_index('idx_session_activity', table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_id'), table_name='user_sessions')
    op.create_index(op.f('ix_user_sessions_session_id'), 'user_sessions', ['session_id'], unique=False)
    op.create_unique_constraint(op.f('uq_user_sessions_session_id'), 'user_sessions', ['session_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_index(op.f('idx_sessions_last_activity'), 'user_sessions', ['last_activity'], unique=False)
    op.create_index(op.f('idx_sessions_is_active'), 'user_sessions', ['is_active'], unique=False)
    op.alter_column('user_sessions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               nullable=True)
    op.alter_column('user_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               nullable=True)
    op.alter_column('user_sessions', 'id',
               existing_type=sa.String(length=36),
               server_default=sa.text('uuid_generate_v4()'),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('user_sessions', 'version',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('user_sessions', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=True)
    op.alter_column('user_sessions', 'preferences',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               existing_nullable=True)
    op.alter_column('user_sessions', 'session_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=sa.text("'{}'::jsonb"),
               existing_nullable=True)
    op.alter_column('user_sessions', 'actions_performed',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('user_sessions', 'page_views',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
    op.alter_column('user_sessions', 'last_activity',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
    op.alter_column('user_sessions', 'user_agent',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('user_sessions', 'ip_address',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=45),
               existing_nullable=True)
    op.alter_column('user_sessions', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.UUID(),
               nullable=True)
    op.alter_column('user_sessions', 'session_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.add_column('resume_documents', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('resume_documents', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_resume_documents_updated_at'), 'resume_documents', ['updated_at'], unique=False)
    op.create_index(op.f('ix_resume_documents_is_active'), 'resume_documents', ['is_active'], unique=False)
    op.create_index(op.f('ix_resume_documents_id'), 'resume_documents', ['id'], unique=False)
    op.create_index(op.f('ix_resume_documents_created_at'), 'resume_documents', ['created_at'], unique=False)
    op.create_index(op.f('idx_resume_user_created'), 'resume_documents', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_resume_status_created'), 'resume_documents', ['processing_status', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_resume_hash'), 'resume_documents', ['file_hash'], unique=False)
    op.alter_column('resume_documents', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('resume_customizations', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('resume_customizations', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_resume_customizations_updated_at'), 'resume_customizations', ['updated_at'], unique=False)
    op.create_index(op.f('ix_resume_customizations_is_active'), 'resume_customizations', ['is_active'], unique=False)
    op.create_index(op.f('ix_resume_customizations_id'), 'resume_customizations', ['id'], unique=False)
    op.create_index(op.f('ix_resume_customizations_created_at'), 'resume_customizations', ['created_at'], unique=False)
    op.create_index(op.f('idx_customization_tech_stack'), 'resume_customizations', ['tech_stack_input'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_customization_company_job'), 'resume_customizations', ['company_name', 'job_title'], unique=False)
    op.alter_column('resume_customizations', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('resume_analytics_view', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('resume_analytics_view', 'updated_at')
    op.drop_column('resume_analytics_view', 'created_at')
    op.drop_index(op.f('ix_requirements_version'), table_name='requirements')
    op.create_index(op.f('ix_requirements_updated_at'), 'requirements', ['updated_at'], unique=False)
    op.create_index(op.f('ix_requirements_id'), 'requirements', ['id'], unique=False)
    op.create_index(op.f('ix_requirements_created_at'), 'requirements', ['created_at'], unique=False)
    op.create_index(op.f('idx_requirements_tech_stack'), 'requirements', ['tech_stack'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_requirements_search'), 'requirements', [sa.literal_column("to_tsvector('english'::regconfig, (job_title::text || ' '::text) || client_company::text)")], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_requirements_created_status'), 'requirements', [sa.literal_column('created_at DESC'), 'req_status'], unique=False)
    op.alter_column('requirements', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('requirements', 'version',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('requirements', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('requirement_summary_view', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('requirement_summary_view', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('requirement_summary_view', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('requirement_consultants', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('requirement_consultants', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_requirement_consultants_updated_at'), 'requirement_consultants', ['updated_at'], unique=False)
    op.create_index(op.f('ix_requirement_consultants_is_active'), 'requirement_consultants', ['is_active'], unique=False)
    op.create_index(op.f('ix_requirement_consultants_id'), 'requirement_consultants', ['id'], unique=False)
    op.create_index(op.f('ix_requirement_consultants_created_at'), 'requirement_consultants', ['created_at'], unique=False)
    op.alter_column('requirement_consultants', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('requirement_comments', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('requirement_comments', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_requirement_comments_updated_at'), 'requirement_comments', ['updated_at'], unique=False)
    op.create_index(op.f('ix_requirement_comments_is_active'), 'requirement_comments', ['is_active'], unique=False)
    op.create_index(op.f('ix_requirement_comments_id'), 'requirement_comments', ['id'], unique=False)
    op.create_index(op.f('ix_requirement_comments_created_at'), 'requirement_comments', ['created_at'], unique=False)
    op.alter_column('requirement_comments', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('processing_logs', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('processing_logs', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_processing_logs_updated_at'), 'processing_logs', ['updated_at'], unique=False)
    op.create_index(op.f('ix_processing_logs_is_active'), 'processing_logs', ['is_active'], unique=False)
    op.create_index(op.f('ix_processing_logs_id'), 'processing_logs', ['id'], unique=False)
    op.create_index(op.f('ix_processing_logs_created_at'), 'processing_logs', ['created_at'], unique=False)
    op.create_index(op.f('idx_processing_log_step'), 'processing_logs', ['step_name', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_processing_log_level_time'), 'processing_logs', ['log_level', sa.literal_column('created_at DESC')], unique=False)
    op.alter_column('processing_logs', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('email_sends', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('email_sends', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_email_sends_updated_at'), 'email_sends', ['updated_at'], unique=False)
    op.create_index(op.f('ix_email_sends_is_active'), 'email_sends', ['is_active'], unique=False)
    op.create_index(op.f('ix_email_sends_id'), 'email_sends', ['id'], unique=False)
    op.create_index(op.f('ix_email_sends_created_at'), 'email_sends', ['created_at'], unique=False)
    op.create_index(op.f('idx_email_sent_date'), 'email_sends', [sa.literal_column('sent_at DESC')], unique=False, postgresql_where='(sent_at IS NOT NULL)')
    op.create_index(op.f('idx_email_recipient_status'), 'email_sends', ['recipient_email', 'send_status'], unique=False)
    op.alter_column('email_sends', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('database_stats', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('database_stats', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_database_stats_updated_at'), 'database_stats', ['updated_at'], unique=False)
    op.create_index(op.f('ix_database_stats_is_active'), 'database_stats', ['is_active'], unique=False)
    op.create_index(op.f('ix_database_stats_id'), 'database_stats', ['id'], unique=False)
    op.create_index(op.f('ix_database_stats_created_at'), 'database_stats', ['created_at'], unique=False)
    op.alter_column('database_stats', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('audit_logs', sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('audit_logs', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_audit_logs_updated_at'), 'audit_logs', ['updated_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_is_active'), 'audit_logs', ['is_active'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.alter_column('audit_logs', 'id',
               existing_type=sa.String(length=36),
               type_=sa.UUID(),
               existing_nullable=False)
    # ### end Alembic commands ###
